esphome:
  name: bluetooth-proxy
  friendly_name: Bluetooth Proxy
  name_add_mac_suffix: false
  platformio_options:
    upload_speed: 115200
  on_boot:
    - priority: 600
      then:
      - lambda: |-
          id(ble_device_count) = 0;
          id(device_count_actual) = 0;
    - priority: 500
      then:
        - logger.log: "Boot - LED red"
        - light.turn_off:
            id: "built_in_led"
        - delay: 500ms
        - light.turn_on:
            id: "built_in_led"
            brightness: 100%
            transition_length: 0.1s
            red: 100%
            green: 0%
            blue: 0%
    - priority: 240
      then:
        - logger.log: "Boot - LED yellow"
        - light.turn_on:
            id: "built_in_led"
            brightness: 50%
            transition_length: 0.1s
            red: 100%
            green: 100%
            blue: 0%
        - wait_until:
            api.connected:
        - logger.log: "Boot - LED green"
        - light.turn_on:
            id: "built_in_led"
            brightness: 50%
            transition_length: 0.1s
            red: 0%
            green: 100%
            blue: 0%
        - delay: 60s
        - light.turn_off:
            id: "built_in_led"

esp32:
  board: m5stack-core-esp32
  framework:
    type: arduino

globals:
  - id: ble_device_count
    type: int
    restore_value: no
    initial_value: '0'
  - id: device_addresses
    type: std::string[100]
    restore_value: no
  - id: device_count_actual
    type: int
    restore_value: no
    initial_value: '0'

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "BluetoothProxyFallback"
    password: !secret wifi_password

logger:

api:
  encryption:
    key: !secret bluetooth_proxy_esphome_encryption_key

ota:
  - platform: esphome
    password: !secret esphome_ota_password

#external_components:
#  # orginally using github://martydingo/esphome-axp192, but this fork has a charging indicator
#  - source: github://landonr/esphome-axp192@lando/add-charging-indicator
#
#
#    components: [axp192]

esp32_ble_tracker:
  scan_parameters:
    active: true
  on_ble_advertise:
    then:
      - lambda: |-
          // Get MAC address as string
          std::string mac_addr = x.address_str();
          
          // Check if we've seen this device before (linear search through fixed array)
          bool found = false;
          for (int i = 0; i < id(device_count_actual); i++) {
            if (id(device_addresses)[i] == mac_addr) {
              found = true;
              break;
            }
          }
          
          // Add new device if not found and we have space
          if (!found && id(device_count_actual) < 100) {
            id(device_addresses)[id(device_count_actual)] = mac_addr;
            id(device_count_actual)++;
            id(ble_device_count) = id(device_count_actual);
          }

bluetooth_proxy:
  active: true

time:
  - platform: homeassistant
    id: homeassistant_time
  - platform: sntp
    id: sntp_time

# Reset device count every 5 minutes
interval:
  - interval: 300s
    then:
      - lambda: |-
          // Clear the device list every 5 minutes to show "current" devices
          id(device_count_actual) = 0;
          id(ble_device_count) = 0;
          for (int i = 0; i < 100; i++) {
            id(device_addresses)[i] = "";
          }

sensor:
  - platform: template
    name: "Proxied Devices"
    id: proxied_devices
    lambda: |-
      if (isnan(id(ble_device_count))) {
        return 0;
      }
      return (int)id(ble_device_count);
    update_interval: 10s
    accuracy_decimals: 0

  - platform: uptime
    name: "Uptime"
    id: uptime_sensor

  - platform: debug
    free:
      name: "Heap Free"
    block:
      name: "Heap Max Block"

text_sensor:
  - platform: debug
    device:
      name: "Device Info"
    reset_reason:
      name: "Reset Reason"

light:
  - platform: fastled_clockless
    chipset: SK6812
    pin: 27
    num_leds: 1
    rgb_order: GRB
    name: "Built-In LED"
    id: built_in_led

debug:
  update_interval: 30s